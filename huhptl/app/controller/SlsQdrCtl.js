/*
 * File: app/controller/SlsQdrCtl.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('HuhPtl.controller.SlsQdrCtl', {
    extend: 'Ext.app.Controller',

    stores: [
        'CusInvT1',
        'CusInvT2'
    ],

    LgdRnr: function(component, eOpts) {
        var Cmp = component,
            BusCde = Cmp.itemId,
            Clr1 = '#f0a50a',
            Clr2 = '#ffdd99';

        if (BusCde == 'FS') {
            Clr1 = '#c20024';
            Clr2 = '#ff6680';
        }
        else if (BusCde == 'RT') {
            Clr1 = '#2044ba';
            Clr2 = '#7e95e7';
        }

        this.LodLgd(Cmp.getEl(),BusCde,Clr1,Clr2, 'SlsQdrLgd' + BusCde);
    },

    HuHPtlRnr: function(component, eOpts) {
        Ext.Function.defer(function() {
            this.RfrSls('');
        }, 1500, this);
    },

    SlsWdwClk: function(tool, e, eOpts) {
        if (tool.type == 'maximize') {
            tool.setType('minimize');
            Ext.getCmp('FinQdrPnl').hide();
            Ext.getCmp('QdrBtm').hide();
        }
        else {
            tool.setType('maximize');
            Ext.getCmp('FinQdrPnl').show();
            Ext.getCmp('QdrBtm').show();
        }
    },

    BusCdeChg: function(field, newValue, oldValue, eOpts) {
        if (newValue == 'Consumer Goods')  {
            newValue = 'CG';
        }
        else if (newValue == 'Foodservice')  {
            newValue = 'FS';
        }

        else if (newValue == 'Retail')  {
            newValue = 'RT';
        }
        else {
            newValue = '';
        }

        this.RfrSls(newValue);
    },

    PrsAxsEvt: function(Lbl, Evt, Opt) {
        var Elm = Ext.get(Lbl.id);

        if (Evt.type == 'mouseover') {
            Elm.set({
                fill: 'red'
            });
        }
        else if (Evt.type == 'mouseout') {
            Elm.set({
                fill: 'black'
            });
        }
        else if (Evt.type == 'click') {
            var Rcd = Ext.create('HuhPtl.model.SlsPrdOpt');
            var Frm = Ext.getCmp('SlsPrdPnl').down('form').getForm();
            var MthFllNme = ['January','February','March','April','May','June','July','August','September','October','November','December'];
            var Mth = Ext.Date.getMonthNumber(Lbl.text.substr(0,3)) + 1;
            var Yrs = 2000+Number(Lbl.text.substr(4,2));
            var Typ = Lbl.text.slice(-6);
            var ShwAct = (Typ == 'Actual') ? true : false;
            var ShwBud = (Typ == 'Budget') ? true : false;
            var DspCht = Frm.findField('DspCht');

            DspCht.setValue(false);
            Rcd.set('ShwCG',true);
            Rcd.set('ShwFS',true);
            Rcd.set('ShwRT',true);
            Rcd.set('BegMth',MthFllNme[Mth-1]);
            Rcd.set('BegYrs',Yrs);
            Rcd.set('EndMth',MthFllNme[Mth-1]);
            Rcd.set('EndYrs',Yrs);
            Rcd.set('PrdTch','*ALL');
            Rcd.set('ShwAct',ShwAct);
            Rcd.set('ShwBud',ShwBud);
            Rcd.set('ProBud',true);
            Frm.loadRecord(Rcd);

            Ext.getCmp('CrdDck').getLayout().setActiveItem(1);
            Ext.Function.defer(function() {
                DspCht.setValue(true);
                HuhPtl.getApplication().getController('SlsPrdCtl').UpdCht(true,true);
            }, 250, this);
        }

    },

    LodLgd: function(Elm, BusCde, ActClr, BudClr, Idn) {
        var Ctl = this;
        var Lgd = Ext.create('Ext.draw.Component', {
            renderTo: Elm,
            width: 265,
            height: 15,
            background: 'white',
            //    border: 1,
            //    style: {
            //        borderColor: 'black',
            //        borderStyle: 'solid'
            //    },
            items: [
            {
                type: 'rect',
                x: 45,
                y: 0,
                width: 6,
                height: 6,
                fill: ActClr
            },
            {
                type: "text",
                x: 55,
                y: 4,
                text: "Actual",
                fill: 'black',
                font: '10px Arial'

            },
            {
                type: 'rect',
                x: 95,
                y: 0,
                width: 6,
                height: 6,
                fill: BudClr
            },
            {
                type: "text",
                x: 105,
                y: 4,
                text: "Budget",
                fill: 'black',
                font: '10px Arial'

            }
            ]
        });

        /*
        Lgd.getEl().on('click', function(Evt,Elm){
        Ctl.RfrSls(BusCde);
        }, Lgd);

        Lgd.getEl().on('mouseenter', function(Evt,Elm){
        var Slc = '#' + Idn + ' > svg > rect';
        Ext.select(Slc).each (function(Obj, ObjLst, Idx) {
        if (Idx === 1) {
        var Elm = Ext.get(Obj.dom.id);
        Elm.set({
        fill: 'beige'
        });
        }
        });
        }, Lgd);

        Lgd.getEl().on('mouseleave', function(Evt,Elm){
        var Slc = '#' + Idn + ' > svg > rect';
        Ext.select(Slc).each (function(Obj, ObjLst, Idx) {
        if (Idx === 1) {
        var Elm = Ext.get(Obj.dom.id);
        Elm.set({
        fill: 'white'
        });
        }
        });
        }, Lgd);
        */
    },

    RfrSls: function(BusCde) {
        var EndDte = new Date(),
            EndMth = EndDte.getMonth() + 1,
            EndYrs = EndDte.getFullYear(),
            BegDte = Ext.Date.add(EndDte, Ext.Date.MONTH, -12),
            BegMth = BegDte.getMonth() + 1,
            BegYrs = BegDte.getFullYear();

        this.getCusInvT1Store().load({
            params: { 
                BusCde: BusCde,
                BegMth: BegMth,
                BegYrs: BegYrs,
                EndMth: EndMth,
                EndYrs: EndYrs
            }
        });

    },

    init: function(application) {
        this.control({
            "#SlsQdrPnl container[itemId=Lgd] container": {
                afterrender: this.LgdRnr
            },
            "#HuhPtl": {
                afterrender: this.HuHPtlRnr
            },
            "tool[itemId=SlsWdw]": {
                click: this.SlsWdwClk
            },
            "combobox [itemId=BusCde]": {
                change: this.BusCdeChg
            }
        });
    }

});
