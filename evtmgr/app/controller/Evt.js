/*
 * File: app/controller/Evt.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('EvtMgr.controller.Evt', {
    extend: 'Ext.app.Controller',
    alias: 'controller.evt',

    stores: [
        'Evt'
    ],

    refs: [
        {
            ref: 'EvtLst',
            selector: 'evtlst'
        },
        {
            ref: 'EvtGrpLst',
            selector: 'evtgrplst'
        },
        {
            ref: 'EvtFrm',
            selector: 'bsepnl form[itemId=EvtFrm]'
        },
        {
            ref: 'BsePnlCrd',
            selector: 'bsepnl panel[itemId=BsePnlCrd]'
        }
    ],

    ShwPnl: function(component, eOpts) {
        Btn = component.up('viewport').down('toolbar').child('button[itemId=RtnBtn]');
        Btn.setVisible(true);
        Btn.setText('Return to Event List');
    },

    HdePnl: function(component, eOpts) {
        TBr = component.up('viewport').down('toolbar');
        TBr.child('button[itemId=RtnBtn]').setVisible(false);
    },

    EvtClk: function(dataview, record, item, index, e, eOpts) {
        this.LodFrm('Edt');
    },

    AddBtnClk: function(button, e, eOpts) {
        this.LodFrm('Add');
    },

    CnlBtnClk: function(button, e, eOpts) {
        console.log(button.up('viewport'));
        console.log(button.up('viewport').down('panel'));

        button.up('viewport').down('panel').getLayout().setActiveItem(0);

    },

    EdtBtnClk: function(button, e, eOpts) {
        this.LodFrm('Edt');
    },

    DltBtnClk: function(button, e, eOpts) {
        this.LodFrm('Dlt');
    },

    SveBtnClk: function(button, e, eOpts) {
        var Pnl = button.up('form'),
            Frm = Pnl.getForm(),
            VluLst = Frm.getValues(), 
            Sto = this.getEvtStore();

        if (!Frm.isValid()) {
            Pnl.down('label[itemId=ErrMsg]').setVisible(true);
            return;
        }
        else {
            Pnl.down('label[itemId=ErrMsg]').setVisible(false);
        }

        switch(Pnl.down('label[itemId=Acn]').text)
        {
            case 'Add':
            var Rcd = Ext.create('EvtMgr.model.Evt');
            Rcd.set(VluLst);
            Sto.add(Rcd);
            Frm.reset();
            break;

            case 'Edt':
            Frm.getRecord().set(VluLst);
            break;

            case 'Dlt':
            var Lst = this.getEvtLst();
            Sto.remove(Frm.getRecord());

            DltBtn = this.getEvtGrpLst().down('toolbar button[itemId=DltBtn]');

            if (Sto.getTotalCount() > 0) {
                if (Lst) {
                    Lst.getSelectionModel().select(0);
                }

                DltBtn.setDisabled(true);
            }
            else {
                DltBtn.setDisabled(false);
            }
        }

        Sto.sync();
    },

    init: function(application) {
        this.getEvtStore().on({
            scope: this,
            load : this.StoRdy
        });

        this.control({
            "bsepnl container[itemId=EvtDtl]": {
                show: this.ShwPnl,
                hide: this.HdePnl
            },
            "evtlst": {
                itemdblclick: this.EvtClk
            },
            "evtlst toolbar button[itemId=AddBtn]": {
                click: this.AddBtnClk
            },
            "bsepnl form[itemId=EvtFrm] button[itemId=CnlBtn]": {
                click: this.CnlBtnClk
            },
            "evtlst toolbar button[itemId=EdtBtn]": {
                click: this.EdtBtnClk
            },
            "evtlst toolbar button[itemId=DltBtn]": {
                click: this.DltBtnClk
            },
            "bsepnl form[itemId=EvtFrm] button[itemId=SveBtn]": {
                click: this.SveBtnClk
            }
        });
    },

    LodSto: function(EvtGrpIdn) {
        this.getEvtStore().load({
            params: { 
                EvtGrpIdn: EvtGrpIdn
            }
        });
    },

    StoRdy: function(Sto) {
        var Lst = this.getEvtLst(),
            DltBtn = this.getEvtGrpLst().down('toolbar button[itemId=DltBtn]');

        if (Sto.getTotalCount() > 0) {
            Lst.getSelectionModel().select(0);

            DltBtn.setDisabled(true);
        }
        else {
            DltBtn.setDisabled(false);
        }
    },

    LodFrm: function(Acn) {
        console.log(Acn);

        var Pnl = this.getEvtFrm(),
            Frm = Pnl.getForm();

        switch(Acn)
        {
            case 'Add':
            var StrDte = new Date();
            StrDte.setMinutes(0);
            StrDte.setHours(0);
            Frm.reset();

            Frm.findField('AccIdn').setValue(Ext.util.Cookies.get('AccIdn'));
            Frm.findField('EvtGrpIdn').setValue(this.getEvtGrpLst().getSelectionModel().getSelection()[0].get('Idn'));
            Frm.findField('StrDte').setValue(StrDte);
            Frm.findField('EndDte').setValue(StrDte);
            Frm.findField('StrTme').setValue('12:00 AM');
            Frm.findField('EndTme').setValue('12:00 AM');
            Pnl.query('.field').forEach(function(Fld){
                Fld.setReadOnly(false);
            });

            Pnl.down('button[itemId=SveBtn]').setText('Add');
            break;

            case 'Edt':
            Frm.loadRecord(this.getEvtLst().getSelectionModel().getSelection()[0]);
            Pnl.query('.field').forEach(function(Fld){
                Fld.setReadOnly(false);
            });

            Pnl.down('button[itemId=SveBtn]').setText('Update');
            break;

            case 'Dlt':
            Frm.loadRecord(this.getEvtLst().getSelectionModel().getSelection()[0]);
            Pnl.query('.field').forEach(function(Fld){
                Fld.setReadOnly(true);
            });
            Pnl.down('button[itemId=SveBtn]').setText('Delete');
            break;
        }

        Frm.findField('Ttl').focus(false,200);
        Pnl.down('label[itemId=Acn]').setText(Acn);
        Pnl.down('label[itemId=ErrMsg]').setVisible(false);
        this.getBsePnlCrd().getLayout().setActiveItem(1);
    }

});
