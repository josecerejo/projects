/*
 * File: app/controller/TrkAtcCtl.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DshBrd.controller.TrkAtcCtl', {
    extend: 'Ext.app.Controller',

    stores: [
        'FleDrpInf',
        'TrkAtc'
    ],

    refs: [
        {
            ref: 'FleDrp',
            selector: 'fledrp'
        },
        {
            ref: 'TrkMstDtl',
            selector: 'trkmstdtl'
        },
        {
            ref: 'TrkAtc',
            selector: 'trkatc'
        }
    ],

    SlcChg: function(model, selected, eOpts) {
        if (selected[0]) {
            this.getTrkAtc().down('form').getForm().loadRecord(selected[0]);
        }
    },

    OvrAtcDrp: function(Pnl) {
        Pnl.setBodyStyle('backgroundColor','#DAE7F6');
    },

    LveAtcDrp: function(Pnl) {
        Pnl.setBodyStyle('backgroundColor','');
    },

    DrpAtcDrp: function(Pnl) {
        Pnl.setBodyStyle('backgroundColor','');
    },

    FleDrpStr: function(Cmp, Evt, FleLst, FleIdnMst) {
        var TrkIdn = this.getTrkMstDtl().getForm().findField('TrkIdn').getValue(),
            Sto = this.getFleDrpInfStore(),
            Idx = 0;

        Ext.Array.each(FleLst, function(Fle) {
            var Rcd = Ext.create('DshBrd.model.FleDrpInf'),
                FleNmeTmp = FleIdnMst + ('0' + Idx.toString()).slice(-2) + '-' +  Fle.name;

            Rcd.set('Idn',Idx);
            Rcd.set('FlrNme','../htsatt/');
            Rcd.set('FlePfx',TrkIdn.slice(-7));
            Rcd.set('FleNme',Fle.name);
            Rcd.set('Des',Fle.name);
            Rcd.set('FleNmeOrg',Fle.name);
            Rcd.set('FleNmeDrp',Fle.name);
            Rcd.set('FlrNmeTmp','../fledrp/');
            Rcd.set('FlePfxTmp',FleIdnMst + ('0' + Idx.toString()).slice(-2));
            Rcd.set('FleExs','');
            Rcd.set('FleRpl','Yes');
            Rcd.set('PrsSts',0);
            Sto.add(Rcd);
            Idx++;
        }, this);

        Wdw = Ext.create('DshBrd.view.FleDrp').show();
        Wdw.down('toolbar').getComponent('FleIdnMst').setValue(FleIdnMst);
    },

    LodStr: function(Cmp, Evt, Fle, FleIdx, FleIdn) {
        //console.log('LodStr');
        //console.log(Fle);
    },

    LodScs: function(Cmp, Evt, Fle, FleIdx, FleIdn) {
        Ext.getCmp('prgbar-' + FleIdx).updateProgress(1,'',true);

        var Rcd = this.getFleDrpInfStore().getAt(FleIdx);
        Ext.Ajax.request({
            url: '../shared/FleDrp.php',
            scope: this,
            params: {
                FleDrpInf: Ext.JSON.encode(Rcd.getData()),
                PrsTyp: 'SveFle',
                FleRsl: Evt.target.result
            },
            success: function(RspJSN){
                Rsp = Ext.JSON.decode(RspJSN.responseText);
                if (Rsp.Scs === true) {
                    Rcd.set('PrsSts','Temporarily Stored');
                    this.ChkLodCpl();
                }
                else {
                    console.log(Rsp.Dta);
                    Ext.Array.each(Rsp.Msg, function (Err) {
                        console.log(Err.PmrIdn);
                        Ext.Array.each(Err.Msg, function (ErrMsg) {
                            console.log(ErrMsg);
                        });
                    });
                }
            },
            failure: function(){
                console.log('Load Error-php');
            }
        });
    },

    LodAbr: function(Cmp, Evt, Fle, FleIdx, FleIdn) {
        //console.log('LodAbr');
    },

    LodErr: function(Cmp, Evt, Fle, FleIdx, FleIdn) {
        console.log('LodErr');
    },

    LodPrg: function(Cmp, Evt, Fle, FleIdx, FleIdn) {
        var PrgVlu = Evt.loaded/Evt.total;
        if (PrgVlu == 1) {
            Ext.getCmp('prgbar-' + FleIdx).updateProgress(Evt.loaded/Evt.total,'',true);
        }
    },

    LodEnd: function(Cmp, Evt, Fle, FleIdx, FleIdn) {
        //console.log('LodEnd');
    },

    FleDrpSve: function(button, e, eOpts) {
        var FleDrpInfSto = this.getFleDrpInfStore(),
            TrkAtcSto = this.getTrkAtcStore(),
            Idx = 0,
            FleDrpInfLst = [],
            TrkAtcLst = [];

        FleDrpInfSto.each(function(Rcd) {
            Rcd.setDirty();
            FleDrpInfLst[Idx++] = Rcd.getData();
        });

        Idx = 0;
        TrkAtcSto.each(function(Rcd) {
            TrkAtcLst[Idx++] = Rcd.getData();
        });

        FleDrpInfSto.sync({
            scope: this,
            success: function(Bch){
                this.FleTmpClr(button.up('window'));
                Ext.Ajax.request({
                    url: 'data/TrkAtc.php',
                    scope: this,
                    params: {
                        FleDrpInfLst: Ext.JSON.encode(FleDrpInfLst),
                        TrkAtcLst: Ext.JSON.encode(TrkAtcLst),
                        TrkIdn: this.getTrkMstDtl().getForm().findField('TrkIdn').getValue(),
                        PrsTyp: 'UpdDta'
                    },
                    success: function(RspJSN){
                        FleDrpInfSto.removeAll(true);
                        TrkAtcSto.load({
                            params: { 
                                TrkIdn: this.getTrkMstDtl().getForm().findField('TrkIdn').getValue(),
                                PrsTyp: 'LodDta'
                            }
                        });
                    },
                    failure: function(){
                        console.log('Load Error-php');
                    }
                });
            }
        });
    },

    FleDrpCnl: function(button, e, eOpts) {
        this.FleTmpClr(button.up('window'));
        this.getFleDrpInfStore().removeAll(true);
    },

    FleDrpEdt: function() {
        Rcd = context.record;
        Ext.Ajax.request({
            url: '../shared/FleDrp.php',
            scope: this,
            params: {
                FleDrpInf: Ext.JSON.encode(Rcd.getData()),
                PrsTyp: 'ChkFle'
            },
            success: function(RspJSN){
                Rsp = Ext.JSON.decode(RspJSN.responseText);
                if (Rsp.Scs === true) {
                    Rcd.set('FleExs',Rsp.FleExs);
                }
            },
            failure: function(){
                console.log('Load Error-php');
            }
        });
    },

    TrkAtcDlt: function(button, e, eOpts) {
        var Rcd = this.getTrkAtc().down('gridpanel').getSelectionModel().getSelection()[0], 
        Sto = this.getTrkAtcStore(),
        DltBtn = button,
        SveBtn = button.up('toolbar').down('button[text=Save]');

        Sto.remove(Rcd);
        Sto.sync({
            success: function (Bch, Opt) {
                SveBtn.setDisabled(false);
                DltBtn.setDisabled(false);
                return true;
            },
            failure: function (Bch, Opt) {
                return false;
            }
        });

        Frm = button.up('form').getForm().reset();
    },

    TrkAtcSve: function(button, e, eOpts) {
        var Sto = this.getTrkAtcStore(),
            Frm = button.up('form').getForm(),
            SveBtn = button,
            DltBtn = button.up('toolbar').down('button[text=Delete]');

        Frm.updateRecord();
        Sto.sync({
            scope: this,
            success: function (Bch, Opt) {
                SveBtn.setDisabled(false);
                DltBtn.setDisabled(false);
                Frm.loadRecord(this.getTrkAtc().down('gridpanel').getSelectionModel().getSelection()[0]);        
                return true;
            },
            failure: function (Bch, Opt) {
                return false;
            }
        });
    },

    init: function(application) {
        this.getTrkAtcStore().on({
            scope: this,
            load : this.TrkAtcLod,
            beforesync: this.TrkAtcBfrSyc
        });

        this.control({
            "trkatc gridpanel": {
                selectionchange: this.SlcChg
            },
            "trkatc panel[itemId=AtcDrp]": {
                dragover: this.OvrAtcDrp,
                dragleave: this.LveAtcDrp,
                drop: this.DrpAtcDrp,
                fdpstart: this.FleDrpStr,
                loadstart: this.LodStr,
                load: this.LodScs,
                loadabort: this.LodAbr,
                loaderror: this.LodErr,
                loadprogress: this.LodPrg,
                loadend: this.LodEnd
            },
            "fledrp toolbar button[text=Save]": {
                click: this.FleDrpSve
            },
            "fledrp toolbar button[text=Cancel]": {
                click: this.FleDrpCnl
            },
            "fledrp gridpanel": {
                edit: this.FleDrpEdt
            },
            "trkatc toolbar button[text=Delete]": {
                click: this.TrkAtcDlt
            },
            "trkatc toolbar button[text=Save]": {
                click: this.TrkAtcSve
            }
        });
    },

    FleTmpClr: function(Wdw) {
        var Idx = 0;

        while (Ext.getCmp('prgbar-' + Idx)) {
            Ext.getCmp('prgbar-' + Idx).destroy();
            Idx++;
        }

        Ext.Ajax.request({
            url: '../shared/FleDrp.php',
            scope: this,
            params: {
                FlePfxTmp: Wdw.down('toolbar').getComponent('FleIdnMst').getValue(), 
                FlrNmeTmp: '../fledrp/',
                PrsTyp: 'DltFleAll'
            },
            success: function(RspJSN){
                Rsp = Ext.JSON.decode(RspJSN.responseText);
                if (Rsp.Scs === true) {
                    // console.log(Rsp);
                }
                else {
                    Ext.Array.each(Rsp.Msg, function (Err) {
                        console.log(Err.PmrIdn);
                        Ext.Array.each(Err.Msg, function (ErrMsg) {
                            console.log(ErrMsg);
                        });
                    });
                }
            },
            failure: function(){
                console.log('Load Error-php');
            }
        });

        Wdw.close();
    },

    ChkLodCpl: function() {
        var Sto = this.getFleDrpInfStore(),
            LodCpl = true;

        Sto.each(function(Rcd) {
            if (Rcd.get('PrsSts') === 0) {
                LodCpl = false;
                return false;
            }
        });

        if (LodCpl) {
            Sto.load({
                params: {
                    FlePfxTmp: this.getFleDrpInfStore().getAt(0).get('FlePfxTmp').substr(0,13),
                    FlrNmeTmp: '../fledrp/',
                    PrsTyp: 'GetInf'
                }
            });

            this.getFleDrp().down('button[text=Save]').enable(true);
        }
    },

    TrkAtcLod: function(Rcd) {
        if (this.getTrkAtcStore().getTotalCount() > 0) {
            if (this.getTrkAtc().down('gridpanel')) {
                this.getTrkAtc().down('gridpanel').getSelectionModel().select(0);
            }
        }
    },

    TrkAtcBfrSyc: function(Sto, Opr) {
        var TBr = this.getTrkAtc().down('form').down('toolbar'),
            SveBtn = TBr.down('button[text=Save]'),
            DltBtn = TBr.down('button[text=Delete]');


        console.log(SveBtn);
        console.log(DltBtn);

        SveBtn.setDisabled(true);
        DltBtn.setDisabled(true);
    }

});
