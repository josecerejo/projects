/*
 * File: app/view/PrjTsk.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('DshBrd.view.PrjTsk', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.prjtsk',

    border: 0,
    store: 'PrjTsk',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        return '<a href=https://www.quickbase.com/db/bazid6rxu?a=er&rid=' + value + ' target="_blank">'+ value +'</a>';
                    },
                    dataIndex: 'task_id',
                    text: 'Task Idn',
                    flex: 0.75
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (value == '[object Object]') {
                            return '';
                        }
                        else {
                            return value;
                        }
                    },
                    dataIndex: 'task_name',
                    text: 'Description',
                    flex: 4
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (value == '[object Object]') {
                            return '';
                        }
                        else {
                            return value;
                        }
                    },
                    dataIndex: 'status',
                    text: 'Status',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (value == '[object Object]') {
                            return '';
                        }
                        else {
                            return value;
                        }
                    },
                    dataIndex: 'assigned_to',
                    text: 'Assigned To',
                    flex: 3
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (value == '[object Object]') {
                            return '';
                        }
                        else {
                            return Number(Number(value) / 3600000).toFixed(2);
                        }

                    },
                    align: 'right',
                    dataIndex: 'req_hours',
                    text: 'Req Hrs',
                    flex: 0.75
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (value == '[object Object]') {
                            return '';
                        }
                        else {
                            return Number(Number(value) / 3600000).toFixed(2);
                        }
                    },
                    align: 'right',
                    dataIndex: 'epd_hours',
                    text: 'EPD Hrs',
                    flex: 0.75
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (value == '[object Object]') {
                            return '';
                        }
                        else {
                            var Dte = new Date(Number(value));
                            return ('0' + (Dte.getMonth()+1)).slice(-2) + '/' + ('0' + Dte.getDate()).slice(-2) + '/' + Dte.getFullYear();
                        }

                    },
                    align: 'center',
                    dataIndex: 'start',
                    text: 'Start Date',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (value == '[object Object]') {
                            return '';
                        }
                        else {
                            var Dte = new Date(Number(value));
                            return ('0' + (Dte.getMonth()+1)).slice(-2) + '/' + ('0' + Dte.getDate()).slice(-2) + '/' + Dte.getFullYear();
                        }
                    },
                    align: 'center',
                    dataIndex: 'finish_date',
                    text: 'Finish Date',
                    flex: 1
                },
                {
                    xtype: 'gridcolumn',
                    renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {
                        if (value == '[object Object]') {
                            return '';
                        }
                        else {
                            return value;
                        }
                    },
                    hidden: true,
                    dataIndex: 'related_resource',
                    text: 'Related Resource',
                    flex: 2
                }
            ]
        });

        me.callParent(arguments);
    }

});